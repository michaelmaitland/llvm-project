# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 4
# RUN: llc -mtriple=riscv64 -mattr=+m,+v -run-pass=regbankselect \
# RUN:   -disable-gisel-legality-check -simplify-mir -verify-machineinstrs %s \
# RUN:   -o - | FileCheck -check-prefix=RV64I %s

---
name:            insertelement_nxv1i8
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $v8

    ; RV64I-LABEL: name: insertelement_nxv1i8
    ; RV64I: liveins: $v8
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[DEF:%[0-9]+]]:vrb(<vscale x 2 x s8>) = G_IMPLICIT_DEF
    ; RV64I-NEXT: [[C:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 1
    ; RV64I-NEXT: [[TRUNC:%[0-9]+]]:gprb(s8) = G_TRUNC [[C]](s32)
    ; RV64I-NEXT: [[C1:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 1
    ; RV64I-NEXT: [[TRUNC1:%[0-9]+]]:gprb(s8) = G_TRUNC [[C1]](s32)
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 2 x s8>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s8), [[TRUNC1]](s8)
    ; RV64I-NEXT: $v8 = COPY [[IVEC]](<vscale x 2 x s8>)
    ; RV64I-NEXT: PseudoRET implicit $v8
    %0:_(<vscale x 2 x s8>) = G_IMPLICIT_DEF
    %5:_(s32) = G_CONSTANT i32 1
    %1:_(s8) = G_TRUNC %5(s32)
    %4:_(s32) = G_CONSTANT i32 1
    %2:_(s8) = G_TRUNC %4(s32)
    %3:_(<vscale x 2 x s8>) = G_INSERT_VECTOR_ELT %0, %1(s8), %2(s8)
    $v8 = COPY %3(<vscale x 2 x s8>)
    PseudoRET implicit $v8

...
---
name:            insertelement_nxv4i8
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $v8

    ; RV64I-LABEL: name: insertelement_nxv4i8
    ; RV64I: liveins: $v8
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:vrb(<vscale x 4 x s8>) = COPY $v8
    ; RV64I-NEXT: [[C:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 0
    ; RV64I-NEXT: [[TRUNC:%[0-9]+]]:gprb(s8) = G_TRUNC [[C]](s32)
    ; RV64I-NEXT: [[C1:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 0
    ; RV64I-NEXT: [[TRUNC1:%[0-9]+]]:gprb(s8) = G_TRUNC [[C1]](s32)
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 4 x s8>) = G_INSERT_VECTOR_ELT [[COPY]], [[TRUNC]](s8), [[TRUNC1]](s8)
    ; RV64I-NEXT: $v8 = COPY [[IVEC]](<vscale x 4 x s8>)
    ; RV64I-NEXT: PseudoRET implicit $v8
    %0:_(<vscale x 4 x s8>) = COPY $v8
    %5:_(s32) = G_CONSTANT i32 0
    %1:_(s8) = G_TRUNC %5(s32)
    %4:_(s32) = G_CONSTANT i32 0
    %2:_(s8) = G_TRUNC %4(s32)
    %3:_(<vscale x 4 x s8>) = G_INSERT_VECTOR_ELT %0, %1(s8), %2(s8)
    $v8 = COPY %3(<vscale x 4 x s8>)
    PseudoRET implicit $v8

...
---
name:            insertelement_nxv8i8
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $v8

    ; RV64I-LABEL: name: insertelement_nxv8i8
    ; RV64I: liveins: $v8
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:vrb(<vscale x 8 x s8>) = COPY $v8
    ; RV64I-NEXT: [[C:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 1
    ; RV64I-NEXT: [[TRUNC:%[0-9]+]]:gprb(s8) = G_TRUNC [[C]](s32)
    ; RV64I-NEXT: [[C1:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 1
    ; RV64I-NEXT: [[TRUNC1:%[0-9]+]]:gprb(s8) = G_TRUNC [[C1]](s32)
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 8 x s8>) = G_INSERT_VECTOR_ELT [[COPY]], [[TRUNC]](s8), [[TRUNC1]](s8)
    ; RV64I-NEXT: $v8 = COPY [[IVEC]](<vscale x 8 x s8>)
    ; RV64I-NEXT: PseudoRET implicit $v8
    %0:_(<vscale x 8 x s8>) = COPY $v8
    %5:_(s32) = G_CONSTANT i32 1
    %1:_(s8) = G_TRUNC %5(s32)
    %4:_(s32) = G_CONSTANT i32 1
    %2:_(s8) = G_TRUNC %4(s32)
    %3:_(<vscale x 8 x s8>) = G_INSERT_VECTOR_ELT %0, %1(s8), %2(s8)
    $v8 = COPY %3(<vscale x 8 x s8>)
    PseudoRET implicit $v8

...
---
name:            insertelement_nxv16i8
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $v8m2, $x10, $x11

    ; RV64I-LABEL: name: insertelement_nxv16i8
    ; RV64I: liveins: $v8m2, $x10, $x11
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:vrb(<vscale x 16 x s8>) = COPY $v8m2
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:gprb(s64) = COPY $x10
    ; RV64I-NEXT: [[COPY2:%[0-9]+]]:gprb(s64) = COPY $x11
    ; RV64I-NEXT: [[TRUNC:%[0-9]+]]:gprb(s8) = G_TRUNC [[COPY1]](s64)
    ; RV64I-NEXT: [[TRUNC1:%[0-9]+]]:gprb(s8) = G_TRUNC [[COPY2]](s64)
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 16 x s8>) = G_INSERT_VECTOR_ELT [[COPY]], [[TRUNC]](s8), [[TRUNC1]](s8)
    ; RV64I-NEXT: $v8m2 = COPY [[IVEC]](<vscale x 16 x s8>)
    ; RV64I-NEXT: PseudoRET implicit $v8m2
    %0:_(<vscale x 16 x s8>) = COPY $v8m2
    %1:_(s64) = COPY $x10
    %2:_(s64) = COPY $x11
    %3:_(s8) = G_TRUNC %1(s64)
    %4:_(s8) = G_TRUNC %2(s64)
    %5:_(<vscale x 16 x s8>) = G_INSERT_VECTOR_ELT %0, %3(s8), %4(s8)
    $v8m2 = COPY %5(<vscale x 16 x s8>)
    PseudoRET implicit $v8m2

...
---
name:            insertelement_nxv32i8
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $v8m4, $x10, $x11

    ; RV64I-LABEL: name: insertelement_nxv32i8
    ; RV64I: liveins: $v8m4, $x10, $x11
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:vrb(<vscale x 32 x s8>) = COPY $v8m4
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:gprb(s64) = COPY $x10
    ; RV64I-NEXT: [[COPY2:%[0-9]+]]:gprb(s64) = COPY $x11
    ; RV64I-NEXT: [[TRUNC:%[0-9]+]]:gprb(s8) = G_TRUNC [[COPY1]](s64)
    ; RV64I-NEXT: [[TRUNC1:%[0-9]+]]:gprb(s8) = G_TRUNC [[COPY2]](s64)
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 32 x s8>) = G_INSERT_VECTOR_ELT [[COPY]], [[TRUNC]](s8), [[TRUNC1]](s8)
    ; RV64I-NEXT: $v8m4 = COPY [[IVEC]](<vscale x 32 x s8>)
    ; RV64I-NEXT: PseudoRET implicit $v8m4
    %0:_(<vscale x 32 x s8>) = COPY $v8m4
    %1:_(s64) = COPY $x10
    %2:_(s64) = COPY $x11
    %3:_(s8) = G_TRUNC %1(s64)
    %4:_(s8) = G_TRUNC %2(s64)
    %5:_(<vscale x 32 x s8>) = G_INSERT_VECTOR_ELT %0, %3(s8), %4(s8)
    $v8m4 = COPY %5(<vscale x 32 x s8>)
    PseudoRET implicit $v8m4

...
---
name:            insertelement_nxv64i8
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; RV64I-LABEL: name: insertelement_nxv64i8
    ; RV64I: [[DEF:%[0-9]+]]:vrb(<vscale x 64 x s8>) = G_IMPLICIT_DEF
    ; RV64I-NEXT: [[C:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 0
    ; RV64I-NEXT: [[TRUNC:%[0-9]+]]:gprb(s8) = G_TRUNC [[C]](s32)
    ; RV64I-NEXT: [[C1:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 0
    ; RV64I-NEXT: [[TRUNC1:%[0-9]+]]:gprb(s8) = G_TRUNC [[C1]](s32)
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 64 x s8>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s8), [[TRUNC1]](s8)
    ; RV64I-NEXT: $v8m8 = COPY [[IVEC]](<vscale x 64 x s8>)
    ; RV64I-NEXT: PseudoRET implicit $v8m8
    %0:_(<vscale x 64 x s8>) = G_IMPLICIT_DEF
    %5:_(s32) = G_CONSTANT i32 0
    %1:_(s8) = G_TRUNC %5(s32)
    %4:_(s32) = G_CONSTANT i32 0
    %2:_(s8) = G_TRUNC %4(s32)
    %3:_(<vscale x 64 x s8>) = G_INSERT_VECTOR_ELT %0, %1(s8), %2(s8)
    $v8m8 = COPY %3(<vscale x 64 x s8>)
    PseudoRET implicit $v8m8

...
---
name:            insertelement_nxv1i16
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; RV64I-LABEL: name: insertelement_nxv1i16
    ; RV64I: [[DEF:%[0-9]+]]:vrb(<vscale x 1 x s16>) = G_IMPLICIT_DEF
    ; RV64I-NEXT: [[C:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 0
    ; RV64I-NEXT: [[TRUNC:%[0-9]+]]:gprb(s16) = G_TRUNC [[C]](s32)
    ; RV64I-NEXT: [[C1:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 0
    ; RV64I-NEXT: [[TRUNC1:%[0-9]+]]:gprb(s16) = G_TRUNC [[C1]](s32)
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 1 x s16>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s16), [[TRUNC1]](s16)
    ; RV64I-NEXT: $v8 = COPY [[IVEC]](<vscale x 1 x s16>)
    ; RV64I-NEXT: PseudoRET implicit $v8
    %0:_(<vscale x 1 x s16>) = G_IMPLICIT_DEF
    %5:_(s32) = G_CONSTANT i32 0
    %1:_(s16) = G_TRUNC %5(s32)
    %4:_(s32) = G_CONSTANT i32 0
    %2:_(s16) = G_TRUNC %4(s32)
    %3:_(<vscale x 1 x s16>) = G_INSERT_VECTOR_ELT %0, %1(s16), %2(s16)
    $v8 = COPY %3(<vscale x 1 x s16>)
    PseudoRET implicit $v8

...
---
name:            insertelement_nxv2i16
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; RV64I-LABEL: name: insertelement_nxv2i16
    ; RV64I: [[DEF:%[0-9]+]]:vrb(<vscale x 2 x s16>) = G_IMPLICIT_DEF
    ; RV64I-NEXT: [[C:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 1
    ; RV64I-NEXT: [[TRUNC:%[0-9]+]]:gprb(s16) = G_TRUNC [[C]](s32)
    ; RV64I-NEXT: [[C1:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 1
    ; RV64I-NEXT: [[TRUNC1:%[0-9]+]]:gprb(s16) = G_TRUNC [[C1]](s32)
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 2 x s16>) = G_INSERT_VECTOR_ELT [[DEF]], [[TRUNC]](s16), [[TRUNC1]](s16)
    ; RV64I-NEXT: $v8 = COPY [[IVEC]](<vscale x 2 x s16>)
    ; RV64I-NEXT: PseudoRET implicit $v8
    %0:_(<vscale x 2 x s16>) = G_IMPLICIT_DEF
    %5:_(s32) = G_CONSTANT i32 1
    %1:_(s16) = G_TRUNC %5(s32)
    %4:_(s32) = G_CONSTANT i32 1
    %2:_(s16) = G_TRUNC %4(s32)
    %3:_(<vscale x 2 x s16>) = G_INSERT_VECTOR_ELT %0, %1(s16), %2(s16)
    $v8 = COPY %3(<vscale x 2 x s16>)
    PseudoRET implicit $v8

...
---
name:            insertelement_nxv4i16
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $v8

    ; RV64I-LABEL: name: insertelement_nxv4i16
    ; RV64I: liveins: $v8
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:vrb(<vscale x 4 x s16>) = COPY $v8
    ; RV64I-NEXT: [[C:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 0
    ; RV64I-NEXT: [[TRUNC:%[0-9]+]]:gprb(s16) = G_TRUNC [[C]](s32)
    ; RV64I-NEXT: [[C1:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 0
    ; RV64I-NEXT: [[TRUNC1:%[0-9]+]]:gprb(s16) = G_TRUNC [[C1]](s32)
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 4 x s16>) = G_INSERT_VECTOR_ELT [[COPY]], [[TRUNC]](s16), [[TRUNC1]](s16)
    ; RV64I-NEXT: $v8 = COPY [[IVEC]](<vscale x 4 x s16>)
    ; RV64I-NEXT: PseudoRET implicit $v8
    %0:_(<vscale x 4 x s16>) = COPY $v8
    %5:_(s32) = G_CONSTANT i32 0
    %1:_(s16) = G_TRUNC %5(s32)
    %4:_(s32) = G_CONSTANT i32 0
    %2:_(s16) = G_TRUNC %4(s32)
    %3:_(<vscale x 4 x s16>) = G_INSERT_VECTOR_ELT %0, %1(s16), %2(s16)
    $v8 = COPY %3(<vscale x 4 x s16>)
    PseudoRET implicit $v8

...
---
name:            insertelement_nxv8i16
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $v8m2

    ; RV64I-LABEL: name: insertelement_nxv8i16
    ; RV64I: liveins: $v8m2
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:vrb(<vscale x 8 x s16>) = COPY $v8m2
    ; RV64I-NEXT: [[C:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 1
    ; RV64I-NEXT: [[TRUNC:%[0-9]+]]:gprb(s16) = G_TRUNC [[C]](s32)
    ; RV64I-NEXT: [[C1:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 1
    ; RV64I-NEXT: [[TRUNC1:%[0-9]+]]:gprb(s16) = G_TRUNC [[C1]](s32)
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 8 x s16>) = G_INSERT_VECTOR_ELT [[COPY]], [[TRUNC]](s16), [[TRUNC1]](s16)
    ; RV64I-NEXT: $v8m2 = COPY [[IVEC]](<vscale x 8 x s16>)
    ; RV64I-NEXT: PseudoRET implicit $v8m2
    %0:_(<vscale x 8 x s16>) = COPY $v8m2
    %5:_(s32) = G_CONSTANT i32 1
    %1:_(s16) = G_TRUNC %5(s32)
    %4:_(s32) = G_CONSTANT i32 1
    %2:_(s16) = G_TRUNC %4(s32)
    %3:_(<vscale x 8 x s16>) = G_INSERT_VECTOR_ELT %0, %1(s16), %2(s16)
    $v8m2 = COPY %3(<vscale x 8 x s16>)
    PseudoRET implicit $v8m2

...
---
name:            insertelement_nxv16i16
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $v8m4, $x10, $x11

    ; RV64I-LABEL: name: insertelement_nxv16i16
    ; RV64I: liveins: $v8m4, $x10, $x11
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:vrb(<vscale x 16 x s16>) = COPY $v8m4
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:gprb(s64) = COPY $x10
    ; RV64I-NEXT: [[COPY2:%[0-9]+]]:gprb(s64) = COPY $x11
    ; RV64I-NEXT: [[TRUNC:%[0-9]+]]:gprb(s16) = G_TRUNC [[COPY1]](s64)
    ; RV64I-NEXT: [[TRUNC1:%[0-9]+]]:gprb(s16) = G_TRUNC [[COPY2]](s64)
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 16 x s16>) = G_INSERT_VECTOR_ELT [[COPY]], [[TRUNC]](s16), [[TRUNC1]](s16)
    ; RV64I-NEXT: $v8m4 = COPY [[IVEC]](<vscale x 16 x s16>)
    ; RV64I-NEXT: PseudoRET implicit $v8m4
    %0:_(<vscale x 16 x s16>) = COPY $v8m4
    %1:_(s64) = COPY $x10
    %2:_(s64) = COPY $x11
    %3:_(s16) = G_TRUNC %1(s64)
    %4:_(s16) = G_TRUNC %2(s64)
    %5:_(<vscale x 16 x s16>) = G_INSERT_VECTOR_ELT %0, %3(s16), %4(s16)
    $v8m4 = COPY %5(<vscale x 16 x s16>)
    PseudoRET implicit $v8m4

...
---
name:            insertelement_nxv32i16
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $v8m8, $x10, $x11

    ; RV64I-LABEL: name: insertelement_nxv32i16
    ; RV64I: liveins: $v8m8, $x10, $x11
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:vrb(<vscale x 32 x s16>) = COPY $v8m8
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:gprb(s64) = COPY $x10
    ; RV64I-NEXT: [[COPY2:%[0-9]+]]:gprb(s64) = COPY $x11
    ; RV64I-NEXT: [[TRUNC:%[0-9]+]]:gprb(s16) = G_TRUNC [[COPY1]](s64)
    ; RV64I-NEXT: [[TRUNC1:%[0-9]+]]:gprb(s16) = G_TRUNC [[COPY2]](s64)
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 32 x s16>) = G_INSERT_VECTOR_ELT [[COPY]], [[TRUNC]](s16), [[TRUNC1]](s16)
    ; RV64I-NEXT: $v8m8 = COPY [[IVEC]](<vscale x 32 x s16>)
    ; RV64I-NEXT: PseudoRET implicit $v8m8
    %0:_(<vscale x 32 x s16>) = COPY $v8m8
    %1:_(s64) = COPY $x10
    %2:_(s64) = COPY $x11
    %3:_(s16) = G_TRUNC %1(s64)
    %4:_(s16) = G_TRUNC %2(s64)
    %5:_(<vscale x 32 x s16>) = G_INSERT_VECTOR_ELT %0, %3(s16), %4(s16)
    $v8m8 = COPY %5(<vscale x 32 x s16>)
    PseudoRET implicit $v8m8

...
---
name:            insertelement_nxv1i32
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; RV64I-LABEL: name: insertelement_nxv1i32
    ; RV64I: [[DEF:%[0-9]+]]:vrb(<vscale x 1 x s32>) = G_IMPLICIT_DEF
    ; RV64I-NEXT: [[C:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 0
    ; RV64I-NEXT: [[C1:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 0
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 1 x s32>) = G_INSERT_VECTOR_ELT [[DEF]], [[C]](s32), [[C1]](s32)
    ; RV64I-NEXT: $v8 = COPY [[IVEC]](<vscale x 1 x s32>)
    ; RV64I-NEXT: PseudoRET implicit $v8
    %0:_(<vscale x 1 x s32>) = G_IMPLICIT_DEF
    %1:_(s32) = G_CONSTANT i32 0
    %2:_(s32) = G_CONSTANT i32 0
    %3:_(<vscale x 1 x s32>) = G_INSERT_VECTOR_ELT %0, %1(s32), %2(s32)
    $v8 = COPY %3(<vscale x 1 x s32>)
    PseudoRET implicit $v8

...
---
name:            insertelement_nxv2i32
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; RV64I-LABEL: name: insertelement_nxv2i32
    ; RV64I: [[DEF:%[0-9]+]]:vrb(<vscale x 2 x s32>) = G_IMPLICIT_DEF
    ; RV64I-NEXT: [[C:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 1
    ; RV64I-NEXT: [[C1:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 1
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 2 x s32>) = G_INSERT_VECTOR_ELT [[DEF]], [[C]](s32), [[C1]](s32)
    ; RV64I-NEXT: $v8 = COPY [[IVEC]](<vscale x 2 x s32>)
    ; RV64I-NEXT: PseudoRET implicit $v8
    %0:_(<vscale x 2 x s32>) = G_IMPLICIT_DEF
    %1:_(s32) = G_CONSTANT i32 1
    %2:_(s32) = G_CONSTANT i32 1
    %3:_(<vscale x 2 x s32>) = G_INSERT_VECTOR_ELT %0, %1(s32), %2(s32)
    $v8 = COPY %3(<vscale x 2 x s32>)
    PseudoRET implicit $v8

...
---
name:            insertelement_nxv4i32
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $v8m2

    ; RV64I-LABEL: name: insertelement_nxv4i32
    ; RV64I: liveins: $v8m2
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:vrb(<vscale x 4 x s32>) = COPY $v8m2
    ; RV64I-NEXT: [[C:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 0
    ; RV64I-NEXT: [[C1:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 0
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 4 x s32>) = G_INSERT_VECTOR_ELT [[COPY]], [[C]](s32), [[C1]](s32)
    ; RV64I-NEXT: $v8m2 = COPY [[IVEC]](<vscale x 4 x s32>)
    ; RV64I-NEXT: PseudoRET implicit $v8m2
    %0:_(<vscale x 4 x s32>) = COPY $v8m2
    %1:_(s32) = G_CONSTANT i32 0
    %2:_(s32) = G_CONSTANT i32 0
    %3:_(<vscale x 4 x s32>) = G_INSERT_VECTOR_ELT %0, %1(s32), %2(s32)
    $v8m2 = COPY %3(<vscale x 4 x s32>)
    PseudoRET implicit $v8m2

...
---
name:            insertelement_nxv8i32
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $v8m4

    ; RV64I-LABEL: name: insertelement_nxv8i32
    ; RV64I: liveins: $v8m4
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:vrb(<vscale x 8 x s32>) = COPY $v8m4
    ; RV64I-NEXT: [[C:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 1
    ; RV64I-NEXT: [[C1:%[0-9]+]]:gprb(s32) = G_CONSTANT i32 1
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 8 x s32>) = G_INSERT_VECTOR_ELT [[COPY]], [[C]](s32), [[C1]](s32)
    ; RV64I-NEXT: $v8m4 = COPY [[IVEC]](<vscale x 8 x s32>)
    ; RV64I-NEXT: PseudoRET implicit $v8m4
    %0:_(<vscale x 8 x s32>) = COPY $v8m4
    %1:_(s32) = G_CONSTANT i32 1
    %2:_(s32) = G_CONSTANT i32 1
    %3:_(<vscale x 8 x s32>) = G_INSERT_VECTOR_ELT %0, %1(s32), %2(s32)
    $v8m4 = COPY %3(<vscale x 8 x s32>)
    PseudoRET implicit $v8m4

...
---
name:            insertelement_nxv16i32
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $v8m8, $x10, $x11

    ; RV64I-LABEL: name: insertelement_nxv16i32
    ; RV64I: liveins: $v8m8, $x10, $x11
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:vrb(<vscale x 16 x s32>) = COPY $v8m8
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:gprb(s64) = COPY $x10
    ; RV64I-NEXT: [[COPY2:%[0-9]+]]:gprb(s64) = COPY $x11
    ; RV64I-NEXT: [[TRUNC:%[0-9]+]]:gprb(s32) = G_TRUNC [[COPY1]](s64)
    ; RV64I-NEXT: [[TRUNC1:%[0-9]+]]:gprb(s32) = G_TRUNC [[COPY2]](s64)
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 16 x s32>) = G_INSERT_VECTOR_ELT [[COPY]], [[TRUNC]](s32), [[TRUNC1]](s32)
    ; RV64I-NEXT: $v8m8 = COPY [[IVEC]](<vscale x 16 x s32>)
    ; RV64I-NEXT: PseudoRET implicit $v8m8
    %0:_(<vscale x 16 x s32>) = COPY $v8m8
    %1:_(s64) = COPY $x10
    %2:_(s64) = COPY $x11
    %3:_(s32) = G_TRUNC %1(s64)
    %4:_(s32) = G_TRUNC %2(s64)
    %5:_(<vscale x 16 x s32>) = G_INSERT_VECTOR_ELT %0, %3(s32), %4(s32)
    $v8m8 = COPY %5(<vscale x 16 x s32>)
    PseudoRET implicit $v8m8

...
---
name:            insertelement_nxv1i64
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; RV64I-LABEL: name: insertelement_nxv1i64
    ; RV64I: [[DEF:%[0-9]+]]:vrb(<vscale x 1 x s64>) = G_IMPLICIT_DEF
    ; RV64I-NEXT: [[C:%[0-9]+]]:gprb(s64) = G_CONSTANT i64 0
    ; RV64I-NEXT: [[C1:%[0-9]+]]:gprb(s64) = G_CONSTANT i64 0
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 1 x s64>) = G_INSERT_VECTOR_ELT [[DEF]], [[C]](s64), [[C1]](s64)
    ; RV64I-NEXT: $v8 = COPY [[IVEC]](<vscale x 1 x s64>)
    ; RV64I-NEXT: PseudoRET implicit $v8
    %0:_(<vscale x 1 x s64>) = G_IMPLICIT_DEF
    %1:_(s64) = G_CONSTANT i64 0
    %2:_(s64) = G_CONSTANT i64 0
    %3:_(<vscale x 1 x s64>) = G_INSERT_VECTOR_ELT %0, %1(s64), %2(s64)
    $v8 = COPY %3(<vscale x 1 x s64>)
    PseudoRET implicit $v8

...
---
name:            insertelement_nxv2i64
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; RV64I-LABEL: name: insertelement_nxv2i64
    ; RV64I: [[DEF:%[0-9]+]]:vrb(<vscale x 2 x s64>) = G_IMPLICIT_DEF
    ; RV64I-NEXT: [[C:%[0-9]+]]:gprb(s64) = G_CONSTANT i64 1
    ; RV64I-NEXT: [[C1:%[0-9]+]]:gprb(s64) = G_CONSTANT i64 1
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 2 x s64>) = G_INSERT_VECTOR_ELT [[DEF]], [[C]](s64), [[C1]](s64)
    ; RV64I-NEXT: $v8m2 = COPY [[IVEC]](<vscale x 2 x s64>)
    ; RV64I-NEXT: PseudoRET implicit $v8m2
    %0:_(<vscale x 2 x s64>) = G_IMPLICIT_DEF
    %1:_(s64) = G_CONSTANT i64 1
    %2:_(s64) = G_CONSTANT i64 1
    %3:_(<vscale x 2 x s64>) = G_INSERT_VECTOR_ELT %0, %1(s64), %2(s64)
    $v8m2 = COPY %3(<vscale x 2 x s64>)
    PseudoRET implicit $v8m2

...
---
name:            insertelement_nxv4i64
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $v8m4

    ; RV64I-LABEL: name: insertelement_nxv4i64
    ; RV64I: liveins: $v8m4
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:vrb(<vscale x 4 x s64>) = COPY $v8m4
    ; RV64I-NEXT: [[C:%[0-9]+]]:gprb(s64) = G_CONSTANT i64 0
    ; RV64I-NEXT: [[C1:%[0-9]+]]:gprb(s64) = G_CONSTANT i64 0
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 4 x s64>) = G_INSERT_VECTOR_ELT [[COPY]], [[C]](s64), [[C1]](s64)
    ; RV64I-NEXT: $v8m4 = COPY [[IVEC]](<vscale x 4 x s64>)
    ; RV64I-NEXT: PseudoRET implicit $v8m4
    %0:_(<vscale x 4 x s64>) = COPY $v8m4
    %1:_(s64) = G_CONSTANT i64 0
    %2:_(s64) = G_CONSTANT i64 0
    %3:_(<vscale x 4 x s64>) = G_INSERT_VECTOR_ELT %0, %1(s64), %2(s64)
    $v8m4 = COPY %3(<vscale x 4 x s64>)
    PseudoRET implicit $v8m4

...
---
name:            insertelement_nxv8i64
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $v8m8

    ; RV64I-LABEL: name: insertelement_nxv8i64
    ; RV64I: liveins: $v8m8
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:vrb(<vscale x 8 x s64>) = COPY $v8m8
    ; RV64I-NEXT: [[C:%[0-9]+]]:gprb(s64) = G_CONSTANT i64 1
    ; RV64I-NEXT: [[C1:%[0-9]+]]:gprb(s64) = G_CONSTANT i64 1
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 8 x s64>) = G_INSERT_VECTOR_ELT [[COPY]], [[C]](s64), [[C1]](s64)
    ; RV64I-NEXT: $v8m8 = COPY [[IVEC]](<vscale x 8 x s64>)
    ; RV64I-NEXT: PseudoRET implicit $v8m8
    %0:_(<vscale x 8 x s64>) = COPY $v8m8
    %1:_(s64) = G_CONSTANT i64 1
    %2:_(s64) = G_CONSTANT i64 1
    %3:_(<vscale x 8 x s64>) = G_INSERT_VECTOR_ELT %0, %1(s64), %2(s64)
    $v8m8 = COPY %3(<vscale x 8 x s64>)
    PseudoRET implicit $v8m8

...
---
name:            insertelement_nxv8i64_2
legalized:       true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $v8m8, $x10, $x11

    ; RV64I-LABEL: name: insertelement_nxv8i64_2
    ; RV64I: liveins: $v8m8, $x10, $x11
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:vrb(<vscale x 8 x s64>) = COPY $v8m8
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:gprb(s64) = COPY $x10
    ; RV64I-NEXT: [[COPY2:%[0-9]+]]:gprb(s64) = COPY $x11
    ; RV64I-NEXT: [[IVEC:%[0-9]+]]:vrb(<vscale x 8 x s64>) = G_INSERT_VECTOR_ELT [[COPY]], [[COPY1]](s64), [[COPY2]](s64)
    ; RV64I-NEXT: $v8m8 = COPY [[IVEC]](<vscale x 8 x s64>)
    ; RV64I-NEXT: PseudoRET implicit $v8m8
    %0:_(<vscale x 8 x s64>) = COPY $v8m8
    %1:_(s64) = COPY $x10
    %2:_(s64) = COPY $x11
    %3:_(<vscale x 8 x s64>) = G_INSERT_VECTOR_ELT %0, %1(s64), %2(s64)
    $v8m8 = COPY %3(<vscale x 8 x s64>)
    PseudoRET implicit $v8m8

...
